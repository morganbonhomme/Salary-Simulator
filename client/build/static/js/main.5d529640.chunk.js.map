{"version":3,"sources":["hoc/aux.js","containers/Navbar/navbar.js","containers/Simulator/FormGroup/SimpleDropdown.js","containers/Simulator/FormGroup/MasterGroup.js","helpers/transformData.js","helpers/constants.js","components/Simulator/Form/SaveButton/saveButton.js","containers/Simulator/Results/Results.js","UI/Spinner/spinner.js","containers/Simulator/UserData/userData.js","components/Simulator/Form/Form.js","UI/Input/input.js","UI/Alert/alert.js","UI/Forbidden Access/forbiddenAccess.js","components/Authentication/CreateUser/CreateUser.js","store/actions/auth.js","store/actions/actionType.js","components/Authentication/Login/Login.js","components/Authentication/Logout/Logout.js","components/Authentication/MailActivation/MailActivation.js","components/EmployeesInformation/EmployeesInformation.js","containers/EmployeesInformation/isActive.js","UI/Modal/settingsModal.js","components/Settings/Users/users.js","UI/404/404.js","components/Layout/Layout.js","store/utility.js","store/reducers/authReducer.js","App.js","serviceWorker.js","index.js"],"names":["aux","props","children","navbar","navbarlinks","isAuthenticated","role","notAuthenticatedLinks","className","to","accountLinksALL","compensationLinksTEAM","href","id","data-toggle","aria-haspopup","aria-expanded","aria-labelledby","compensationLinksADMIN","settingsLinksADMIN","type","data-target","aria-controls","aria-label","simpleDropDown","choices","Set","map","choice","key","value","htmlFor","name","onChange","selected","masterGroup","range","min","max","input","step","inputValue","onInput","rangeChanged","readOnly","SimpleDropdown","fetchMatchingCities","data","currentCountry","country","filter","location","area","fetchChoices","item","fetchMasterRange","currentMasterLevel","master","level","factor","fetchFactor","currentValue","salaryCalculation","currentValues","rangeFactor","result","job","seniority","contract","fetchCityFactor","city","parseFloat","Math","round","apiURL","SaveButton","state","selectedUser","selectedSalary","redirect","loading","saveSalary","userID","salary","factors","token","header","headers","axios","post","constant","then","res","setState","catch","error","console","log","selectedUserChangeHandler","event","target","saveSalaryHandler","results","transformData","this","users","user","email","firstName","lastName","userSelected","length","onClick","Component","formattedResult","Intl","NumberFormat","style","minimumFractionDigits","currency","format","toFixed","spinner","userData","values","masterRange","masterValue","Form","cities","defaultValues","loadingUserData","authenticatedEmployeeSalary","noData","fetchUserData","config","get","body","fetchData","response","sort","message","fetchUsers","selectedValueChangeHandler","citychoices","rangeValue","undefined","jobGroup","countryGroup","cityGroup","seniorityGroup","contractGroup","MasterGroup","Results","saveButton","form","basicForm","connect","auth","inputElement","elementType","elementConfig","label","errorMessage","alert","link","forbiddenAccess","CreateUser","serverError","posted","checkValidity","isFormValid","updatedUser","updatedFirstName","trim","updatedLastName","updatedEmail","test","createNewUserHandler","preventDefault","newUser","toLowerCase","errorArray","split","join","inputChangedHandler","inputIdentifier","updateUserElement","formElementArray","push","goBackButton","formElement","createButton","aria-pressed","page","loginSuccess","logout","localStorage","removeItem","login","dispatch","setItem","loginFail","Login","password","updatedPassword","loginUserHandler","onLogin","serverErrorAlert","actions","Logout","onLogout","MailActivation","isTokenValid","confirmPassword","match","updatedConfirmPassword","updatePassword","params","history","pathname","serveurResponse","button","EmployeesInformation","employees","redirectWithInfoHandler","prevProps","prevState","editTitle","scope","Object","employee","isActive","settingsModal","removeAlert","data-dismiss","closeModal","data-backdrop","tabIndex","aria-hidden","UserSettings","removeValue","redirectCreateUserHandler","sendMailHandler","mailSent","closeAlertMailHandler","changeRoleHandler","onChangeHandler","checkRemoveValidity","text","removeUserHandler","closeModalHandler","window","reload","alertMailSent","class","disabled","active","number","defaultValue","notFound","Layout","onTryAutoSignup","links","path","component","exact","SalaryCalculator","NotFound","withRouter","getItem","updateObject","oldObject","updatedProperties","initialState","loginStart","action","reducer","rootReducer","combineReducers","authReducer","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","App","basename","Boolean","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.5d529640.chunk.js","sourcesContent":["import React from 'react';\n\nconst aux = (props) => {\n  return (\n    <div>{props.children}</div>\n  )\n}\n\nexport default aux;","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst navbar = (props) => {\n  let isAuthenticated = props.isAuthenticated;\n  let role = props.role;\n\n  // NOT AUTHENTICATED LINKS\n  let notAuthenticatedLinks =  <Link className=\"nav-item nav-link\" to='/log-in'>Log in</Link>;\n\n  // ALL MEMBERS LINKS \n  let accountLinksALL = \n    <Link className=\"nav-item nav-link\" to='/logout'>Log out</Link>;\n\n  let compensationLinksTEAM = \n  \n  <li className=\"nav-item dropdown\">\n    <a className=\"nav-link dropdown-toggle\" href=\"#\" id=\"navbarDropdown\" role=\"button\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\"> Compensation </a>\n    <div className=\"dropdown-menu\" aria-labelledby=\"navbarDropdown\">\n      <a className=\"dropdown-item\" href='/salary-calculator'>Simulator</a>\n    </div>\n  </li>\n\n  let compensationLinksADMIN = \n  <li className=\"nav-item dropdown\">\n    <a className=\"nav-link dropdown-toggle\" href=\"#\" id=\"navbarDropdown\" role=\"button\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\"> Compensation </a>\n    <div className=\"dropdown-menu\" aria-labelledby=\"navbarDropdown\">\n      <Link className=\"dropdown-item mb-0\" to='/'>Simulator</Link>\n      <a className=\"dropdown-item\" href='/users-information'>Team overview</a>\n    </div>\n  </li>\n\n  let settingsLinksADMIN = \n  <li className=\"nav-item dropdown\">\n    <a className=\"nav-link dropdown-toggle\" href=\"#\" id=\"navbarDropdown\" role=\"button\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\"> Manage Organisation </a>\n    <div className=\"dropdown-menu\" aria-labelledby=\"navbarDropdown\">\n      <a className=\"dropdown-item\" href='/settings/users'>Users</a>\n    </div>\n  </li>\n\n  let navbarlinks;\n  if (isAuthenticated) {\n    if (role === \"Admin\") {\n      navbarlinks =  \n      <div className=\"navbar-nav \">\n        { compensationLinksADMIN }  \n        { settingsLinksADMIN }\n        { accountLinksALL }\n      </div>\n    } else if (role === 'Team') {\n      navbarlinks =  \n      <div className=\"navbar-nav \">\n        { compensationLinksTEAM }  \n        { accountLinksALL }\n        </div>\n    }\n\n  } else {\n    navbarlinks =  \n    <div className=\"navbar-nav\">\n     {notAuthenticatedLinks}\n    </div>\n  }\n\n  return (\n    <nav className=\"navbar navbar-expand-lg navbar-light bg-light mb-4 \">\n      <Link className=\"navbar-brand ml-4\" to='/'>Dashboard</Link>\n      <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNavAltMarkup\" aria-controls=\"navbarNavAltMarkup\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n        <span className=\"navbar-toggler-icon\"></span>\n      </button>\n      <div className=\"collapse navbar-collapse justify-content-end mr-4\" id=\"navbarNavAltMarkup\">\n        {navbarlinks}\n      </div>\n    </nav>\n  )\n}\n\nexport default navbar;","import React from 'react';\n\nconst simpleDropDown = (props) => {\n  let choices = [...new Set(props.choices)].map(choice => {\n    // if (choice === props.selected) {\n    //   return (\n    //     <option \n    //       key={props.selected} \n    //       value={props.selected}\n    //       selected>\n    //       {props.selected}\n    //     </option>\n    //   )\n    // } else {\n      return (      \n        <option \n          key={choice} \n          value={choice}>\n          {choice}\n        </option>\n       )\n    // }\n  });\n  \n  return (\n    <div className=\"form-group\">\n      <label className=\"font-weight-bold\" htmlFor={props.id}>{props.name}</label>\n      <select \n        className=\"custom-select\" \n        id={props.id}\n        onChange={props.onChange}\n        value={props.selected}\n        >\n        {choices}\n      </select>\n    </div>\n  )\n}\n\nexport default simpleDropDown;","import React from 'react';\nimport SimpleDropdown from './SimpleDropdown';\n\n\nconst masterGroup = (props) => {\n  let range;\n  let min;\n  let max;\n  let input;\n \n  if (props.min && props.max) {\n    range =  <input type='range' className='custom-range ' min={props.min} max={props.max} step='0.01' id='masterRange' value={props.inputValue} onInput={props.rangeChanged} onChange={props.rangeChanged}></input>;\n\n    min = <input type='text' readOnly className='form-control-plaintext text-right' id='minRange' value={(props.min)}></input>;\n\n    max = <input type='text' readOnly className='form-control-plaintext' id='maxRange' value={(props.max)}></input>;\n\n    if (props.inputValue) {\n      input = <input type='text' readOnly className='form-control-plaintext w-25 text-center mx-auto font-weight-bolder text-primary' id='actualValue' value={(props.inputValue)}></input>\n    }\n  }\n\n  return (\n    <div className='form-group'>\n      <SimpleDropdown \n        onChange={props.onChange}\n        name={props.name} \n        key={props.id} \n        id={props.id} \n        choices={props.choices}\n        selected={props.selected}/>\n      <div className='container-fluid'>\n        <div className='row justify-content-center '>\n          <div className='col'> \n            {input}\n          </div>\n        </div>\n        <div className='row justify-content-center '>\n          <div className='col-4'> \n            {min}\n          </div>\n          <div className='col my-auto'> \n            {range}\n          </div>\n          <div className='col-4'> \n            {max}\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default masterGroup;","export function fetchMatchingCities(data, currentCountry) {\n  const matchingCountries = data.country.filter( location => location.name === currentCountry ? location : null);\n  const citychoices = matchingCountries.map(country => country.area);\n  return citychoices;\n};\n\nexport function fetchChoices(data, type) {\n  return [...new Set(data[type].map(item => item.name))]\n}\n\nexport function fetchMasterRange(data, currentMasterLevel) {\n  const level = data.master.filter(level => level.name === currentMasterLevel ? level : null);\n  return level[0].factor\n}\n\nexport function fetchFactor(data, type, currentValue) {\n  const typeValueSelected = data[type].filter(type => type.name === currentValue ? type : null);\n  return typeValueSelected[0].factor\n}\n\nexport function fetchCityFactor (data, currentCountry, currentValue) {\n  const typeValueSelected = data.country.filter(type => (type.area === currentValue && type.name === currentCountry) ? type : null);\n  return typeValueSelected[0].factor\n}\n\nexport function salaryCalculation (data, currentValues, rangeFactor ) {\n  const jobFactor = fetchFactor(data, 'job', currentValues.job);\n  const seniorityFactor = fetchFactor(data, 'seniority', currentValues.seniority);\n  const contractFactor = fetchFactor(data, 'contract', currentValues.contract);\n  const cityFactor = fetchCityFactor(data, currentValues.country, currentValues.city);\n  const masterRangeFactor = parseFloat(rangeFactor);\n  const parisBase = (100/60)/100;\n  const result = jobFactor * seniorityFactor * contractFactor * cityFactor * masterRangeFactor * parisBase;\n  return (Math.round(result/1000) * 1000)\n}\n","export const apiURL = 'https://api-dot-modular-source-287611.nw.r.appspot.com'","import React, { Component } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport * as transformData from '../../../../helpers/transformData';\nimport axios from 'axios';\nimport * as constant from '../../../../helpers/constants';\n\nclass SaveButton extends Component { \n  state = {\n    selectedUser: '',\n    selectedSalary: '',\n    redirect: false,\n    loading: false,\n  }\n\n  componentDidMount() {\n    const results = transformData.salaryCalculation(this.props.data, this.props.currentValues, this.props.rangeFactor);\n    this.setState({ ...this.state,\n      selectedUser: this.props.selectedUser ? this.props.selectedUser : '', selectedSalary: Math.round(results) })\n  }\n\n  saveSalary = (userID, salary, factors, token) => {\n    const data = { userID, salary, factors }\n    const header = { headers: {'Authorization' : `Bearer ${token}`}};\n    axios.post(`${constant.apiURL}/user/savesalary`, data, header)\n      .then(res => \n        this.setState({ ...this.state, redirect: true }))\n      .catch(error => console.log(error))\n  }\n\n  selectedUserChangeHandler = (event) => {\n    const userID = event.target.value;\n    this.setState({ ...this.state, selectedUser: userID })\n  }\n\n  saveSalaryHandler = () => {\n    const results = transformData.salaryCalculation(this.props.data, this.props.currentValues, this.props.rangeFactor);\n    const selectedUser = this.props.selectedUser ? this.props.selectedUser : this.state.selectedUser;\n    this.saveSalary(selectedUser, (Math.round(results/1000) * 1000), this.props.currentValues, this.props.token);\n    this.setState({ ...this.state, selectedSalary: results });\n  }\n  \n  render () {\n    let users = this.props.users.map(user => {\n      if (this.props.selectedUser === user.email) {\n        return (\n          <option \n            key={user.email} \n            value={user.email}\n            selected>\n          {`${user.firstName} ${user.lastName}`}\n          </option>\n        )\n      } else {\n        return (\n          <option \n            key={user.email} \n            value={user.email}>\n            {`${user.firstName} ${user.lastName}`}\n          </option>\n        )\n      }\n    });\n\n    \n\n    let select;\n    if (this.props.selectedUser !== null) {\n      select = <select \n      disabled\n      className='custom-select w-75 ' >\n      {users}\n  </select>\n    } else {\n      select = <select \n      className='custom-select' \n      onChange={(event) => this.selectedUserChangeHandler(event)}>\n      <option \n        key={'Empty'} \n        value={null}>\n          Select an employee\n      </option>\n      {users}\n  </select>\n    }\n\n    let user = this.props.users.filter(user => this.props.selectedUser === user.email ? user : null )\n    let userSelected;\n    if (user.length > 0) {\n      userSelected = <p> {`${user[0].firstName} ${user[0].lastName}`} </p>\n    }\n\n    let redirect;\n    if (this.state.redirect) {\n      redirect = <Redirect to='/users-information'/>\n    }\n    \n    return (\n      <div className='container-fluid p-3 mb-5 bg-light border rounded '>\n        {redirect}\n        <div className='row justify-content-end'>\n          <div className='col-12 text-center'>\n            Save this salary for : \n          </div>\n          <div className='col-12 font-weight-bold text-center'>\n            {userSelected}\n          </div>\n          <div className='col-12 text-center'> \n            <button \n            type='button' \n            className='btn btn-primary'\n            onClick={this.saveSalaryHandler}>Save</button>\n          </div>\n        </div>\n      </div>\n    )\n  }\n  \n};\n\nexport default SaveButton;","import React from 'react';\nimport * as transformData from '../../../helpers/transformData';\n\nconst results = (props) => {  \n  const results = transformData.salaryCalculation(props.data, props.currentValues, props.rangeFactor);\n  const formattedResult = (new Intl.NumberFormat('fr', { style: 'currency', minimumFractionDigits : 0, currency: 'EUR'}).format(results.toFixed()));\n  \n  return (\n    <div className='container-fluid bg-success'>\n      <div className='row justify-content-center '>\n        <div className='col mt-4 text-center'> \n          <p className='text-white font-weight-bold'><span className='h2'>{formattedResult}</span> / year (before tax)</p>\n        </div>\n      </div>\n    </div>\n  )\n};\n\nexport default results;","import React from 'react';\n\nconst spinner = () => {\nreturn (\n  <div className='text-center text-secondary mt-5 mb-5 pt-5'>\n  <div className='spinner-border' role='status'>\n    <span className='sr-only'>Loading...</span>\n  </div>\n</div>\n)\n\n}\n\nexport default spinner;","import React from 'react';\n\nconst userData = (props) => {  \n\n  let salary;\n  if (props.salary) {\n    salary = <p className='font-weight-bolder my-1'>{(new Intl.NumberFormat('fr', { style: 'currency', minimumFractionDigits : 0, currency: 'EUR'}).format(props.salary.toFixed()))}</p>\n  }\n  \n  const user = <p className='my-1'>{ `\n    ${props.values.job} // \n    ${props.values.country} // \n    ${props.values.city} // \n    ${props.values.seniority} // \n    ${props.values.masterRange} // \n    ${props.values.masterValue} // \n    ${props.values.contract}\n  ` }</p>\n\n  return (\n    <div className='container-fluid mb-3 bg-light border rounded '>\n      <div className='row justify-content-center '>\n        <div className='col my-2 text-center'> \n        <p className='my-1'> Your actual salary (before tax): </p>\n        {salary}\n        {user}\n        </div>\n      </div>\n    </div>\n  )\n};\n\nexport default userData;","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport axios from 'axios';\n\nimport SimpleDropDown from '../../../containers/Simulator/FormGroup/SimpleDropdown';\nimport MasterGroup from '../../../containers/Simulator/FormGroup/MasterGroup';\nimport SaveButton from './SaveButton/saveButton';\nimport Results from '../../../containers/Simulator/Results/Results';\nimport Spinner from '../../../UI/Spinner/spinner';\nimport Aux from '../../../hoc/aux';\nimport UserData from '../../../containers/Simulator/UserData/userData';\nimport * as transformData from '../../../helpers/transformData';\nimport * as constant from '../../../helpers/constants';\n\nclass Form extends Component {\n  state = {\n    data: {},\n    cities: {},\n    values: {\n      job: null,\n      masterRange: null,\n      masterValue: 0.85,\n      seniority: null,\n      contract: null,\n      country: null,\n      city: null,\n    },\n    defaultValues: {},\n    loading: true,\n    loadingUserData : true,\n    users: [],\n    selectedUser: null,\n    authenticatedEmployeeSalary: null,\n    noData: null,\n  };\n\n  fetchUserData = (token, userID) => {\n    const config = { headers: { 'Authorization' : `Bearer ${token}`} }\n    const request = axios.get(`${constant.apiURL}/user/getuser/${userID}`, config)\n    .then(res => { \n      const values = { ...this.state.values }\n      let noData = false;\n\n      if (res.data.body.job === '') {\n        values.job = this.state.defaultValues.job\n        noData = true;\n      } else {\n        values.job = res.data.body.job }\n\n      if (res.data.body.masterRange === '') {\n        values.masterRange = this.state.defaultValues.masterRange\n      } else {\n        values.masterRange = res.data.body.masterRange }\n\n        if (res.data.body.masterValue === 0 ) {\n          values.masterValue = this.state.defaultValues.masterValue\n        } else {\n          values.masterValue = res.data.body.masterValue }\n\n        if (res.data.body.seniority === '') {\n          values.seniority = this.state.defaultValues.seniority\n        } else {\n          values.seniority = res.data.body.seniority }\n\n        if (res.data.body.contract === '') {\n          values.contract = this.state.defaultValues.contract\n        } else {\n          values.contract = res.data.body.contract }\n\n        if (res.data.body.country === '') {\n          values.country = this.state.defaultValues.country\n        } else {\n          values.country = res.data.body.country }\n        \n        if (res.data.body.city === '') {\n          values.city = this.state.defaultValues.city\n        } else {\n          values.city = res.data.body.city }\n\n      this.setState({ ...this.state, values: values, authenticatedEmployeeSalary: res.data.body.salary, loadingUserData : false, noData });\n      \n      \n    })\n    .catch(error => console.log('error', error))\n    return request\n  }\n\n  fetchData = token => {\n    const request = axios.get(`${constant.apiURL}/simulator`, { headers: {'Authorization' : `Bearer ${token}`}})\n      .then(response => {\n        const values = {...this.state.values};\n\n        values.job = this.props.location.state ? \n          (this.props.location.state.job === '' ? response.data.body.job[0].name : this.props.location.state.job) \n        : response.data.body.job[0].name;\n\n        values.masterRange = this.props.location.state ? \n          (this.props.location.state.masterRange === '' ? response.data.body.master[0].name : this.props.location.state.masterRange) \n        : response.data.body.master[0].name;\n\n        values.masterValue = this.props.location.state ? \n          (this.props.location.state.masterValue === 0 ? 0.85 : this.props.location.state.masterValue) \n        : 0.85 ;\n\n        values.seniority = this.props.location.state ? \n          (this.props.location.state.seniority === '' ? response.data.body.seniority[0].name : this.props.location.state.seniority) \n        : response.data.body.seniority[0].name;\n\n        values.contract = this.props.location.state ? \n          (this.props.location.state.contract === '' ? response.data.body.contract[0].name : this.props.location.state.contract) \n        : response.data.body.contract[0].name;\n\n        values.country = this.props.location.state ?\n          (this.props.location.state.country === '' ? [...new Set(response.data.body.country.map(country => country.name))].sort()[0] : this.props.location.state.country) \n        : [...new Set(response.data.body.country.map(country => country.name))].sort()[0];\n\n        values.city = this.props.location.state ? \n          (this.props.location.state.city === '' ? 'All' : this.props.location.state.city) \n        : 'All';\n       \n        this.setState({ ...this.state,\n          data: response.data.body,\n          values,\n          defaultValues: values,\n          loading: false,\n        });\n      })\n      .catch(error => {\n        this.setState({ ...this.state, loading: false });\n        console.log(error.response.data.message)\n      })\n    return request;\n  };\n\n  fetchUsers = (token) => {\n    const request = axios.get(`${constant.apiURL}/user/getusers`, { headers: {'Authorization' : `Bearer ${token}`}})\n    .then(res => { \n      this.setState({ ...this.state, users: res.data.body });\n    })\n    .catch (error => console.log(error.response.data.message));\n    return request\n  };\n  \n  async componentDidMount () {\n    if (this.props.token !== null) {\n      await this.fetchData(this.props.token);\n      await this.fetchUsers(this.props.token);\n        if (this.props.location.state === undefined) {\n          await this.fetchUserData(this.props.token, this.props.userID);\n        }\n    } else {\n      this.setState({ ...this.state,\n        loading: false,\n      })\n    }\n  }\n\n  selectedValueChangeHandler = (event, type) =>  {\n    const values = {...this.state.values};\n    values[type] = event.target.value;\n\n    if (type === 'country') {\n      const citychoices = transformData.fetchMatchingCities(this.state.data, event.target.value);\n      values.city = citychoices[0];\n    }\n\n    if (type === 'masterValue') {\n      values.masterValue = event.target.value;\n    }\n\n    if (type === 'masterRange') {\n      const rangeValue = transformData.fetchMasterRange(this.state.data, event.target.value)[0]\n      values.masterValue = rangeValue\n    }\n\n    this.setState({ ...this.state, values })\n  }\n\n  render () {\n\n    const data = this.state.data;\n\n    let jobGroup;\n    if (data.job) {\n      jobGroup = <SimpleDropDown \n        onChange={(event) => this.selectedValueChangeHandler(event, 'job')}\n        name='Job'\n        key='job'\n        id='job'\n        choices={ transformData.fetchChoices(data, 'job')} \n        selected={ this.state.values.job }/>\n    }\n\n    let countryGroup;\n    let cityGroup;  \n    if (data.country) {\n\n      countryGroup = <SimpleDropDown \n        onChange={(event) => this.selectedValueChangeHandler(event, 'country')}\n        name='Country'\n        key='country'\n        id='country'\n        choices={transformData.fetchChoices(data, 'country').sort()} \n        selected={this.state.values.country}/>\n\n      cityGroup = <SimpleDropDown \n        onChange={(event) => this.selectedValueChangeHandler(event, 'city')}\n        name='City or Area' \n        key='city' \n        id='city' \n        choices={transformData.fetchMatchingCities(data, this.state.values.country)} \n        selected={this.state.values.city}/>\n    }\n\n    let seniorityGroup;\n    if (data.seniority) {\n      seniorityGroup = <SimpleDropDown \n        onChange={(event) => this.selectedValueChangeHandler(event, 'seniority')}\n        name='Seniority'\n        key='seniority'\n        id='seniority'\n        choices={transformData.fetchChoices(data, 'seniority')} \n        selected={this.state.values.seniority}/>\n\n    }\n\n    let masterGroup;\n    if (data.master) {\n      const range = transformData.fetchMasterRange(data, this.state.values.masterRange);\n      masterGroup = <MasterGroup \n        rangeChanged={(event) => this.selectedValueChangeHandler(event, 'masterValue')}\n        inputValue={this.state.values.masterValue}\n        onChange={(event) => this.selectedValueChangeHandler(event, 'masterRange')}\n        name='Master level of the role' \n        key='master' \n        id='master'  \n        choices={transformData.fetchChoices(data, 'master')}\n        min={range[0]}\n        max={range[1]} \n        selected={ this.state.values.masterRange }\n        />\n        \n    }\n\n    let contractGroup;\n    if (data.contract) {\n      contractGroup = <SimpleDropDown \n        onChange={(event) => this.selectedValueChangeHandler(event, 'contract')}\n        name='Contract'\n        key='contract'\n        id='contract'\n        choices={transformData.fetchChoices(data, 'contract')} \n        selected={this.state.values.contract}/>\n\n    }\n\n    let results;\n    if (this.state.values.job) {\n      results = <Results \n      data={this.state.data}\n      currentValues={this.state.values}\n      rangeFactor={this.state.values.masterValue}> </Results>\n    }\n\n    let basicForm = <div className='shadow p-3 mb-5 bg-white rounded'>\n      {jobGroup}\n      {countryGroup}\n      {cityGroup}\n      {seniorityGroup}\n      {masterGroup}\n      {contractGroup}\n      {results}\n    </div>\n\n    // ADMIN FEATURES\n    let saveButton;\n      if (this.state.values.job ) {\n      saveButton = <SaveButton \n        token={this.props.token}\n        users={this.state.users}\n        data={this.state.data}\n        currentValues={this.state.values}\n        rangeFactor={this.state.values.masterValue}\n        selectedUser={ this.props.location.state ? this.props.location.state.email : null}>\n      </SaveButton>\n    }\n\n    // TEAM FEATURES\n    let userData;\n    \n    if (this.state.noData === null) {\n      userData = <Spinner></Spinner>\n    } else if (this.state.noData === true) {\n      userData =<div className='container-fluid mb-3 bg-light border rounded '>\n      <div className='row justify-content-center '>\n        <div className='col my-2 text-center'> \n        <p className='my-1'> Your salary has not been defined yet </p>\n        </div>\n      </div>\n    </div>\n    } else {\n      userData = <UserData values={this.state.values} salary={this.state.authenticatedEmployeeSalary}></UserData>\n    }\n\n    // FULL FORM\n    let form;\n    if (this.props.role === 'Admin') {\n      if (this.props.location.state !== undefined) {\n        form = \n          <Aux> \n            { basicForm }\n            { saveButton }\n          </Aux>\n      } else {\n        form = \n        <Aux> \n          { userData }\n          { basicForm }\n        </Aux>\n      }\n    } else if (this.props.role === 'Team') {\n      form = \n        <Aux> \n          { userData }\n          { basicForm }\n        </Aux>\n    }\n\n    if (this.state.loading && this.state.loadingUserData) {\n      form = <Spinner />;\n    }\n\n    return (\n      <div className='container'> \n        <div className='row justify-content-center'> \n          <div className='col col-lg-8'>\n            {form}\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nconst mapStatetoProps = state => {\n  return {\n    token: state.auth.token,\n    userID: state.auth.userID,\n    role: state.auth.role,\n  }\n};\n\nexport default connect(mapStatetoProps)(Form);","import React from 'react';\n\nconst input = (props) => {\n\n  let inputElement = null;\n  switch (props.elementType) {\n    case ('input'):\n      inputElement = <input \n        className='form-control'\n        {...props.elementConfig} \n        value={props.value}\n        onChange={props.onChange}/>\n      break;\n    default:\n      inputElement = <input \n        className='form-control'\n        {...props.elementConfig} \n        value={props.value}\n        onChange={props.onChange}/>\n      break;\n  }\n\n  return (\n    <div className='form-group'>\n      <label>{props.label}</label>\n      {inputElement}\n      <div className='text-danger'>{props.errorMessage}</div>\n    </div>\n  )\n}\n\nexport default input","import React from 'react';\n\nconst alert = (props) => {\nreturn (\n  <div className={`alert ${props.className} mt-4`} role='alert'>\n    {props.message}\n    {props.link}\n  </div>\n)\n\n}\n\nexport default alert;","import React from 'react';\n\nconst forbiddenAccess = () => {\n  return (\n    <div>\n      <div className='alert alert-danger mt-4'>Forbidden access You need to be an admin to access this page.</div>\n    </div>\n  )\n}\n\nexport default forbiddenAccess;","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport axios from 'axios';\n\nimport Input from '../../../UI/Input/input';\nimport Alert from '../../../UI/Alert/alert';\nimport SimpleDropdown from '../../../containers/Simulator/FormGroup/SimpleDropdown';\nimport ForbiddenAccess from '../../../UI/Forbidden Access/forbiddenAccess';\nimport * as constant from '../../../helpers/constants';\n\nclass CreateUser extends Component {\n\n  state = {\n    user: {\n      firstName: {\n        elementType: 'input',\n        elementConfig: {\n          type: 'text'\n        },\n        value: '',\n        label: 'First name',\n        errorMessage:'',\n      },\n      lastName: {\n        elementType: 'input',\n        elementConfig: {\n          type: 'text'\n        },\n        value: '',\n        label: 'Last name',\n        errorMessage:'',\n      },\n      email: {\n        elementType: 'input',\n        elementConfig: {\n          type: 'email'\n        },\n        value: '',\n        label: 'Email',\n        errorMessage:'',\n      },\n    },\n    role: 'Team',\n    serverError : '',\n    posted: false,\n  }\n\n  checkValidity = () => {\n    let isFormValid = true;\n    const updatedUser = { ...this.state.user };\n\n    // First Name \n    const updatedFirstName = { ...updatedUser.firstName};\n    updatedFirstName.errorMessage = '';\n    if (this.state.user.firstName.value.trim() === '') {\n      updatedFirstName.errorMessage = 'First name is required';\n      isFormValid = false;\n    } \n\n    // Last Name\n    const updatedLastName = { ...updatedUser.lastName};\n    updatedLastName.errorMessage = '';\n    if (this.state.user.lastName.value.trim() === '') {\n      updatedLastName.errorMessage = 'Last name is required';\n      isFormValid = false;\n    } \n\n    // Email\n    const updatedEmail = { ...updatedUser.email};\n    updatedEmail.errorMessage = '';\n    const pattern = /[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?/;\n    console.log()\n    if (!pattern.test(this.state.user.email.value.trim())) {\n      updatedEmail.errorMessage = 'Email is invalid';\n      isFormValid = false;\n    }\n\n    updatedUser.firstName = updatedFirstName;\n    updatedUser.lastName = updatedLastName;\n    updatedUser.email = updatedEmail;\n    this.setState({ ...this.state, user: updatedUser })\n    return isFormValid;\n  }\n\n  createNewUserHandler = (event) => {\n    event.preventDefault();\n\n    if (this.checkValidity()) {\n      const newUser = {\n        firstName: this.state.user.firstName.value,\n        lastName: this.state.user.lastName.value,\n        email: this.state.user.email.value.toLowerCase(),\n        role: this.state.role,\n      }\n  \n      axios.post(`${constant.apiURL}/user/create`, newUser)\n        .then(res => {\n          this.setState({ ...this.state, posted: true, serverError: ''})\n        }\n        )\n        .catch(error => {\n          const errorArray = error.response.data.message.split('Error: ');\n          this.setState({ ...this.state, posted: false, serverError: errorArray.join('') })\n        }\n      )\n    }\n  }\n\n  selectedValueChangeHandler = (event) =>  {\n    console.log(event.target.value)\n    this.setState({ ...this.state, role: event.target.value })\n  }\n\n  inputChangedHandler = (event, inputIdentifier) => {\n    const updatedUser = { ...this.state.user };\n    const updateUserElement = { ...updatedUser[inputIdentifier] };\n    updateUserElement.value = event.target.value;\n    updatedUser[inputIdentifier] = updateUserElement;\n    this.setState({ ...this.state, user: updatedUser });\n  }\n\n  render() {\n    \n    const formElementArray = [];\n    for (let key in this.state.user) {\n      formElementArray.push({\n        id: key,\n        config: this.state.user[key]\n      });\n    }\n\n    let form = formElementArray.map(formElement => (\n      <Input elementType={ formElement.config.elementType }\n        elementConfig={ formElement.config.elementConfig }\n        value={ formElement.config.value }\n        key={ formElement.id }\n        label={ formElement.config.label }\n        onChange={ (event) => this.inputChangedHandler(event, formElement.id) }\n        errorMessage={ formElement.config.errorMessage }\n      />\n    ))\n\n    let role = <SimpleDropdown \n      choices={ ['Team', 'Admin'] } \n      key={ 'role' } \n      id={ 'role' } \n      name={ 'Role' }\n      onChange={ this.selectedValueChangeHandler }> \n    </SimpleDropdown>\n\n    let createButton = <button onClick={ this.createNewUserHandler } type=\"submit\" className=\"btn btn-primary\">Create</button>\n\n    let alert;\n    let goBackButton;\n\n    if (this.state.posted) {\n      goBackButton = <a href='/settings/users' className=\"btn btn-primary\" role=\"button\" aria-pressed=\"true\">Go back</a>\n      createButton = null;\n      alert = <Alert className={ 'alert-success' } message={ 'Email sent' }/>\n    } else {\n      if (this.state.serverError !== '') {\n        alert = <Alert className={ 'alert-danger' } message={ this.state.serverError }/>\n      }\n    } \n\n    let page =  <form className=\"shadow p-3 mb-5 bg-white rounded\">\n      { form }\n      { role }\n      { createButton }\n      { alert }\n      { goBackButton }\n    </form>\n\n    if (this.props.role === \"Team\") {\n      page = <ForbiddenAccess></ForbiddenAccess>\n    }\n\n    return (\n      <div className=\"container\"> \n        <div className=\"row justify-content-center\"> \n          <div className=\"col col-lg-6\">\n            <h2>Create User</h2>\n            { page }\n          </div>\n        </div>\n      </div>\n    )\n  }\n\n}\n\nconst mapStatetoProps = state => {\n  return {\n    token: state.auth.token,\n    userID: state.auth.userID,\n    role: state.auth.role,\n  }\n};\n\nexport default connect(mapStatetoProps)(CreateUser);\n","import * as actionType from './actionType';\nimport axios from 'axios';\nimport * as constant from '../../helpers/constants';\n\nexport const loginStart = () => {\n  return {\n    type: actionType.LOGIN_START,\n  };\n};\n\nexport const loginSuccess = (userID, token, role) => {\n  return {\n    type: actionType.LOGIN_SUCCESS,\n    userID: userID,\n    token: token,\n    role: role,\n  };\n};\n\nexport const loginFail = (error) => {\n  return {\n    type: actionType.LOGIN_FAIL,\n    error: error,\n  };\n};\n\nexport const logout = () => {\n  localStorage.removeItem('token');\n  localStorage.removeItem('userID');\n  localStorage.removeItem('role');\n  return {\n    type: actionType.LOGOUT,\n  }\n}\n\nexport const login = (data) => {\n  return dispatch => {\n    dispatch(loginStart());\n\n    axios.post(`${constant.apiURL}/user/login`, data)\n      .then(res => {\n        localStorage.setItem('token', res.data.body.token)\n        localStorage.setItem('userID', data.email)\n        localStorage.setItem('role', res.data.body.role)\n        dispatch(loginSuccess(data.email, res.data.body.token, res.data.body.role))\n      })\n      .catch(error => {\n        console.log(error.response.data.message)\n        dispatch(loginFail(error.response.data.message))\n      }\n    )\n  }\n}\n\nexport const loginCheckState = () => {\n  return dispatch => {\n    const token = localStorage.getItem('token');\n    const userID = localStorage.getItem('userID');\n    const role = localStorage.getItem('role');\n    if (token === null) {\n      dispatch(logout())\n      return false\n    } else {\n      dispatch(loginSuccess(userID, token, role))\n      return true\n    }\n  }\n}","export const LOGIN_START = 'LOGIN_START';\nexport const LOGIN_SUCCESS = 'LOGIN_SUCCESS';\nexport const LOGIN_FAIL = 'LOGIN_FAIL';\nexport const LOGOUT = 'LOGOUT';","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\n\nimport Input from '../../../UI/Input/input';\nimport Alert from '../../../UI/Alert/alert';\nimport Spinner from '../../../UI/Spinner/spinner';\nimport * as actions from '../../../store/actions/index';\n\nclass Login extends Component {\n  state = {\n    user: {\n      email: {\n        elementType: 'input',\n        elementConfig: {\n          type: 'email'\n        },\n        value: '',\n        label: 'Email',\n        errorMessage:'',\n      },\n      password: {\n        elementType: 'input',\n        elementConfig: {\n          type: 'password'\n        },\n        value: '',\n        label: 'Password',\n        errorMessage:'',\n      },\n    },\n    serverError : '',\n  }\n\n  inputChangedHandler = (event, inputIdentifier) => {\n    const updatedUser = { ...this.state.user };\n    const updateUserElement = { ...updatedUser[inputIdentifier]};\n    updateUserElement.value = event.target.value;\n    updatedUser[inputIdentifier] = updateUserElement;\n    this.setState({ ...this.state, user: updatedUser });\n  }\n\n  checkValidity = () => {\n    let isFormValid = true;\n    const updatedUser = { ...this.state.user };\n\n    // Email\n    const updatedEmail = { ...updatedUser.email};\n    updatedEmail.errorMessage = '';\n    const pattern = /[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?/;\n    if (!pattern.test(this.state.user.email.value.trim())) {\n      updatedEmail.errorMessage = 'Email is invalid';\n      isFormValid = false;\n    }\n\n    // Password \n    const updatedPassword = { ...updatedUser.password};\n    updatedPassword.errorMessage = '';\n    if (this.state.user.password.value.trim() === '') {\n      updatedPassword.errorMessage = 'Password is required';\n      isFormValid = false;\n    } \n  \n    updatedUser.email = updatedEmail;\n    updatedUser.password = updatedPassword;\n    this.setState({ ...this.state, user: updatedUser })\n    return isFormValid;\n  }\n\n  loginUserHandler = (event) => {\n    event.preventDefault();\n\n    if (this.checkValidity()) {\n      const newUser = {\n        password: this.state.user.password.value,\n        email: this.state.user.email.value.toLowerCase(),\n      }\n      this.props.onLogin(newUser)\n    }\n  }\n\n  render() {\n  \n    let redirect\n    if (this.props.isAuthenticated) {\n      redirect = <Redirect to='../../salary-calculator'/>\n    }\n\n    const formElementArray = [];\n    for (let key in this.state.user) {\n      formElementArray.push({\n        id: key,\n        config: this.state.user[key]\n      });\n    }\n\n    let form = formElementArray.map(formElement => (\n      <Input elementType={ formElement.config.elementType }\n        elementConfig={ formElement.config.elementConfig }\n        value={ formElement.config.value }\n        key={ formElement.id }\n        label={ formElement.config.label }\n        onChange={ (event) => this.inputChangedHandler(event, formElement.id) }\n        errorMessage={ formElement.config.errorMessage }\n      />\n    ))\n\n    if (this.props.loading) {\n      form = <Spinner />\n    }\n\n    let serverErrorAlert;\n    if (this.props.error) {\n      serverErrorAlert = <Alert className='alert-danger' message={ this.props.error }/>\n    }\n\n    return (\n      <div className='container'> \n      { redirect }\n        <div className='row justify-content-center'> \n          <div className='col col-lg-6'>\n            <form className='shadow p-3 mb-5 bg-white rounded' >\n              { form }\n            <button onClick={ this.loginUserHandler } type='submit' className='btn btn-primary'>Log in</button>\n              { serverErrorAlert }\n            </form>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nconst mapStatetoProps = state => {\n  return {\n    loading: state.auth.loading,\n    error: state.auth.error,\n    isAuthenticated: state.auth.token !== null\n  }\n};\n\nconst mapDispatchtoProps = dispatch => {\n  return {\n    onLogin: (data) => dispatch(actions.login(data))\n  }\n};\n\nexport default connect(mapStatetoProps, mapDispatchtoProps)(Login);","import React, { Component } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\n\nimport * as actions from '../../../store/actions/index';\n\nclass Logout extends Component {\n    \n  componentDidMount() {\n    this.props.onLogout();\n  }\n\n  render() {\n    return (\n      <Redirect to='/' />\n    )\n  }\n}\n\nconst mapDispatchtoProps = dispatch => {\n  return {\n    onLogout: () => dispatch(actions.logout())\n  }\n}\n\nexport default connect(null, mapDispatchtoProps)(Logout);","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport axios from 'axios';\n\nimport Input from '../../../UI/Input/input';\nimport Spinner from '../../../UI/Spinner/spinner';\nimport Alert from '../../../UI/Alert/alert';\nimport * as actions from '../../../store/actions/index'\n\nimport * as constant from '../../../helpers/constants';\n\nclass MailActivation extends Component {\n\n  state = {\n    loading: true,\n    isTokenValid: null,\n    email: null,\n    posted: false,\n    alert: false,\n    redirect: false,\n    serverError : '',\n    user: {\n      password: {\n        elementType: 'input',\n        elementConfig: {\n          type: 'password'\n        },\n        value: '',\n        label: 'Password',\n        errorMessage:'',\n      },\n      confirmPassword: {\n        elementType: 'input',\n        elementConfig: {\n          type: 'password'\n        },\n        value: '',\n        label: 'Confirm password',\n        errorMessage:'',\n      },\n    },\n\n  }\n\n  componentDidMount() {\n    const token = this.props.match.params.token\n    console.log(`${constant.apiURL}/user/confirmation/${token}`)\n    axios.get(`${constant.apiURL}/user/confirmation/${token}`)\n      .then(res => {\n        console.log('res', res)\n        this.setState({ ...this.state, loading: false, isTokenValid: true, email: res.data.email })\n      })\n      .catch(error => {\n      this.setState({ ...this.state, loading: false, isTokenValid: false })\n      console.log(error)\n      })\n  }\n\n  inputChangedHandler = (event, inputIdentifier) => {\n    const updatedUser = { ...this.state.user };\n    const updateUserElement = { ...updatedUser[inputIdentifier]};\n    updateUserElement.value = event.target.value;\n    updatedUser[inputIdentifier] = updateUserElement;\n    this.setState({ ...this.state, user: updatedUser });\n  }\n\n  checkValidity = () => {\n    let isFormValid = true;\n    const updatedUser = { ...this.state.user };\n\n    // Password \n    const updatedPassword = { ...updatedUser.password };\n    const alphanumeric = /^(?=.*[0-9])(?=.*[!@#$%^&*])[a-zA-Z0-9!@#$%^&*]{8,20}$/;\n    updatedPassword.errorMessage = '';\n    if (this.state.user.password.value.trim() === '') {\n      updatedPassword.errorMessage = 'Password is required';\n      isFormValid = false;\n    } else {\n      if (!this.state.user.password.value.trim().match(alphanumeric)) {\n        updatedPassword.errorMessage = 'Password must be between 8 to 20 characters with at least one numeric digit and one special character';\n        isFormValid = false;\n      } \n    }\n    \n    // Confirm password \n    const updatedConfirmPassword = { ...updatedUser.confirmPassword};\n    updatedConfirmPassword.errorMessage = '';\n    if (this.state.user.password.value !== this.state.user.confirmPassword.value) {\n      updatedConfirmPassword.errorMessage = 'Passwords do not match';\n      isFormValid = false;\n    }\n\n    updatedUser.password = updatedPassword;\n    updatedUser.confirmPassword = updatedConfirmPassword;\n    this.setState({ ...this.state, user: updatedUser })\n    return isFormValid;\n  }\n\n  updatePassword = (event) => {\n    event.preventDefault();\n\n    if (this.checkValidity()) {\n      const token = this.props.match.params.token;\n      const user = { email: this.state.email, password: this.state.user.password.value };\n      axios.post(`${constant.apiURL}/user/confirmation/${token}`, user)\n\n        .then(res => {\n          this.props.onLogin(user);\n          this.setState({ ...this.state, posted: true, serverError: ''});\n          this.props.history.push({\n            pathname: '../../salary-calculator',\n          })\n        })\n        .catch(error => {\n          const errorArray = error.response.data.message.split('Error: ');\n          this.setState({ ...this.state, posted: false, serverError: errorArray.join('') })\n        }\n      )\n    }\n  }\n\n  render() {\n\n    const formElementArray = [];\n    for (let key in this.state.user) {\n      formElementArray.push({\n        id: key,\n        config: this.state.user[key]\n      });\n    }\n\n    let form = formElementArray.map(formElement => (\n      <Input elementType={formElement.config.elementType}\n        elementConfig={formElement.config.elementConfig}\n        value={formElement.config.value}\n        key={formElement.id}\n        label={formElement.config.label}\n        onChange={(event) => this.inputChangedHandler(event, formElement.id)}\n        errorMessage={formElement.config.errorMessage}\n      />\n    ))\n\n    let alert;\n    if (this.state.serverError !== '') {\n      alert = <Alert className={'alert-danger'} message={this.state.serverError}/>\n    }\n\n    let serveurResponse;\n    let button = <button onClick={this.updatePassword} type='submit' className='btn btn-primary'>Create password</button>\n\n    if (this.state.loading) {\n      serveurResponse = <Spinner></Spinner>\n      form = <p></p>;\n      button = <p></p>;\n    } else {\n      if (this.state.isTokenValid) {\n        serveurResponse = <p> Please choose your password :</p>\n      } else {\n        serveurResponse = <p> This link is expired.</p>\n        form = <p></p>;\n        button = <p></p>;\n      }\n    }\n\n    return (\n      <div className='container'> \n        <div className='row justify-content-center'> \n          <div className='col col-lg-6'>\n            <form className='shadow p-3 mb-5 bg-white rounded'>\n              { serveurResponse }\n              { form }\n              { button }\n              { alert }\n            </form>\n          </div>\n        </div>\n      </div>\n    )\n  }\n\n}\n\nconst mapDispatchtoProps = dispatch => {\n  return {\n    onLogin: (data) => dispatch(actions.login(data))\n  }\n};\n\nexport default connect(null, mapDispatchtoProps)(MailActivation);","import React, { Component } from 'react'; \nimport { connect } from 'react-redux';\nimport axios from 'axios';\n\nimport Spinner from '../../UI/Spinner/spinner';\nimport Aux from '../../hoc/aux';\nimport ForbiddenAccess from '../../UI/Forbidden Access/forbiddenAccess';\nimport * as constant from '../../helpers/constants';\n\nclass EmployeesInformation extends Component {\n  \n  state = {\n    employees: {},\n    selectedUser: null,\n    loading: true,\n  }\n\n  fetchUsers = (token) => {\n   \n    const request = axios.get(`${constant.apiURL}/user/getusers`, { headers: {'Authorization' : `Bearer ${token}`}})\n    .then(res => { \n      this.setState ({ ...this.state, employees: res.data.body })\n      console.log('fetching User done and updated state')\n    })\n    .catch (error => {\n      console.log(error.response.data.message);\n      this.setState ({ ...this.state })\n    })\n    return request\n  };\n\n  async componentDidMount() {\n    if (this.props.token !== null) {\n      console.log('Component did Mount - fetch users start')\n      await this.fetchUsers(this.props.token);\n      this.setState({ ...this.state, loading: false })\n      console.log('page stop load')\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevProps.token !== this.props.token)  {\n      this.fetchUsers(this.props.token)\n    }\n  }\n\n  redirectWithInfoHandler = (data) => {\n    this.props.history.push({\n      pathname: '../salary-calculator',\n      state: data\n    })\n  }\n\n  render () {\n\n    let employees = [];\n    let editTitle;\n  \n    // ADMIN FEATURES\n    if (this.props.role === 'Admin') {\n      editTitle =  <th className='text-center' scope='col'>Edit</th>;\n    }\n\n    if (this.state.employees) {\n      console.log('render employees in the Dom')\n      Object.values(this.state.employees).map(value => {\n        const employee = \n          <tr key={ value.email }>\n            <td className='align-middle'>{`${ value.firstName } ${ value.lastName }` }</td>\n            <td className='align-middle text-center'>{ value.salary === 0 ? '' : (new Intl.NumberFormat('fr', { style: 'currency', minimumFractionDigits : 0, currency: 'EUR' }).format(value.salary.toFixed())) }</td>\n            <td className='align-middle text-center'>{ value.job }</td>\n            <td className='align-middle text-center'>{ value.country === '' ? '' : `${ value.country }, ${ value.city }` }</td>\n            <td className='align-middle text-center'>{ value.seniority }</td>\n            <td className='align-middle text-center'>{ value.masterRange === '' ? '' : `${ value.masterRange } - ${ value.masterValue }` }</td>\n            <td className='align-middle text-center'>{ value.contract }</td>\n            <td className='align-middle text-center'><button onClick={() => this.redirectWithInfoHandler({\n              job: value.job,\n              masterRange: value.masterRange,\n              masterValue: value.masterValue,\n              seniority: value.seniority,\n              contract: value.contract,\n              country: value.country,\n              city: value.city,\n              email: value.email\n            })} type='button' className='btn btn-warning'>Edit</button></td>\n          </tr>\n          employees.push(employee)\n      })\n    }\n\n    let page = \n    <Aux>\n      <table className='table table-striped table-borderless table-sm table-responsive'>\n        <thead>\n          <tr>\n            <th className='text-center' scope='col'>Name</th>\n            <th className='text-center' scope='col'>Salary</th>\n            <th className='text-center' scope='col'>Job</th>\n            <th className='text-center' scope='col'>Localisation</th>\n            <th className='text-center' scope='col'>Seniority</th>\n            <th className='text-center' scope='col'>Master level</th>\n            <th className='text-center' scope='col'>Contract</th>\n            {editTitle}\n          </tr>\n        </thead>\n        <tbody>\n          {employees}\n        </tbody>\n      </table>\n    </Aux>\n\n    if (this.state.loading) {\n      console.log('page is loading')\n      page = <Spinner></Spinner>;\n    }\n\n    if (this.props.role === \"Team\") {\n      page = <ForbiddenAccess></ForbiddenAccess>\n    }\n\n    return (\n      <div className='container'> \n        <div className='row justify-content-center'> \n          <div className='col-auto'>\n            <h2> Team's wage </h2>\n            {page}\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nconst mapStatetoProps = state => {\n  return {\n    token: state.auth.token,\n    userID: state.auth.userID,\n    role: state.auth.role,\n  }\n};\n\nexport default connect(mapStatetoProps)(EmployeesInformation);","import React from 'react';\n\nconst isActive = (props) => {\n  let isActive;\n  switch (props.isActive) {\n    case true: \n      isActive = <span> Active </span>\n    break;\n    case false :\n      isActive = <button type='button' className='btn btn-primary' onClick={props.onClick}>Resend invit</button>\n      break;\n    default: \n      isActive = <p> No information </p>\n}\nreturn (\n  isActive\n  )\n};\n\nexport default isActive;","import React from 'react';\nimport Aux from '../../hoc/aux';\n\nconst settingsModal = (props) => {\n\n  let removeAlert;\n  let button = <Aux> \n    <button type=\"button\" className=\"btn btn-warning mr-3\" data-dismiss=\"modal\">Cancel</button>\n    <button onClick={ props.onClick } type=\"submit\" className=\"btn btn-danger\">Remove</button>\n  </Aux> \n\n  if (props.removeAlert === 'typingError') {\n    removeAlert =  <div className='text-danger mb-3'>  You did not type 'REMOVE' correctly. Try again. </div>\n  }\n\n  if (props.removeAlert === 'success') {\n    removeAlert = <div className='text-success mb-3'> User removed </div>;\n    button =  <button type=\"button\" onClick={props.closeModal} className=\"btn btn-secondary\" data-dismiss=\"modal\">OK</button>\n  }\n\n\n\n\nreturn (\n<Aux> \n      <button type=\"button\" className=\"btn btn-danger\" data-toggle=\"modal\" data-target=\"#delete\">\n      Remove\n    </button>\n    \n    <div className=\"modal fade\" id=\"delete\" data-backdrop=\"static\" tabIndex=\"-1\" aria-labelledby=\"deleteLabel\" aria-hidden=\"true\">\n      <div className=\"modal-dialog\">\n        <div className=\"modal-content\">\n          <div className=\"modal-header\">\n            <h5 className=\"modal-title\" id=\"exampleModalLabel\">{ `Remove ${ props.name } ?` }</h5>\n            <button type=\"button\" onClick={props.closeModal} className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n              <span aria-hidden=\"true\">&times;</span>\n            </button>\n          </div>\n          <div className=\"modal-body\">\n          <p> Are you sure you want to remove <span className='font-weight-bold'>{ props.name }</span> from the dashboard ? If so, type REMOVE :  </p>\n          <form>\n            <div className=\"form-group\">\n              <input onChange={ props.onChange }  value={ props.value } className=\"form-control\"></input>\n            </div>\n           {removeAlert} \n            {button}\n          </form>\n          </div>\n        </div>\n      </div>\n    </div>\n    </Aux>\n)\n\n}\n\nexport default settingsModal;","import React, { Component } from 'react'; \nimport { connect } from 'react-redux';\nimport axios from 'axios';\n\nimport Spinner from '../../../UI/Spinner/spinner';\nimport IsActive from '../../../containers/EmployeesInformation/isActive';\nimport Aux from '../../../hoc/aux';\nimport ForbiddenAccess from '../../../UI/Forbidden Access/forbiddenAccess';\nimport * as constant from '../../../helpers/constants';\nimport SettingModal from '../../../UI/Modal/settingsModal';\n\nclass UserSettings extends Component {\n  \n  state = {\n    loading: true,\n    employees: null,\n    removeValue: '',\n    removeAlert: null,\n  }\n\n  fetchUsers = (token) => {\n    axios.get(`${constant.apiURL}/user/getusers`, { headers: {'Authorization' : `Bearer ${token}`}})\n    .then(res => { \n      this.setState ({ ...this.state, employees: res.data.body, loading: false })\n    })\n    .catch (error => {\n      console.log(error.response.data.message);\n      this.setState ({ ...this.state, loading: false })\n    })\n  };\n\n  componentDidMount() {\n    if (this.props.token !== null) {\n      this.fetchUsers(this.props.token);\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevProps.token !== this.props.token)  {\n      this.fetchUsers(this.props.token)\n    }\n  }\n\n  redirectCreateUserHandler = () => {\n    this.props.history.push({\n      pathname: '/create-user',\n    })\n  }\n\n  sendMailHandler = (event, email) => {\n    const data = { email }\n    const header = { headers: {'Authorization' : `Bearer ${this.props.token}`}};\n    axios.post(`${constant.apiURL}/user/send-mail`, data, header )\n    .then(res => { \n      this.setState({ ...this.state, mailSent: true })\n    })\n    .catch (error => {\n      console.log(error.response.data.message);\n\n    })\n  }\n\n  closeAlertMailHandler = () => {\n    this.setState({ ...this.state, mailSent: false })\n  }\n\n  changeRoleHandler = (event, userID, token) => {\n    const data = { role: event.target.value, userID }\n    const header = { headers: {'Authorization' : `Bearer ${token}`}};\n    axios.post(`${constant.apiURL}/user/saverole`, data, header)\n      .then(res => console.log(res))\n      .catch(error => console.log(error))\n  }\n\n  onChangeHandler = (event) => {\n    this.setState({ ...this.state, removeValue: event.target.value})\n  }\n\n  checkRemoveValidity = (text) => {\n    if (text === 'REMOVE') {\n      return true\n    } else {\n      return false\n    }\n  }\n\n  removeUserHandler = (event, userID, token) => {\n    event.preventDefault()\n    if (this.checkRemoveValidity(this.state.removeValue)) {\n      const data = { userID }\n      const header = { headers: {'Authorization' : `Bearer ${token}`}};\n      axios.post(`${constant.apiURL}/user/delete`, data, header)\n      .then(res => {\n        this.setState({ ...this.state, removeAlert: 'success' })\n      }\n      )\n      .catch(error => console.log(error))\n    } else {\n      this.setState({ ...this.state, removeAlert: 'typingError' })\n    }\n  }\n\n  closeModalHandler = () => {\n    if (this.state.removeAlert === 'success') {\n      window.location.reload(false);\n    } else {\n      console.log('not')\n    }\n  }\n\n  render () {\n\n    let employees = [];\n\n    let alertMailSent;\n    if (this.state.mailSent) {\n      alertMailSent =  <div class='alert alert-success alert-dismissible fade show' role='alert'>\n        Mail sent\n        <button type='button' class='close' data-dismiss='alert' aria-label='Close' onClick={this.closeAlertMailHandler}>\n        <span aria-hidden='true'>&times;</span>\n      </button>\n      </div>\n    }\n\n    if (this.state.employees) {\n      Object.values(this.state.employees).map(value => {\n        let employee;\n        if (value.email === this.props.userID) {\n          employee = \n          <tr key={value.email}>\n            <td className='align-middle'>{`${value.firstName} ${value.lastName}`}</td>\n            <td className='align-middle text-center'>\n              <select className='custom-select' name='role' id='role' disabled>\n                <option> { value.role } </option>\n              </select>\n            </td>\n            <td className='align-middle text-center'><IsActive isActive={value.active} onClick={(event, number) => this.sendMailHandler(event, value.email)}/></td>\n            <td></td>\n          </tr>\n        } else {\n          employee = \n          <tr key={value.email}>\n            <td className='align-middle'>{`${value.firstName} ${value.lastName}`}</td>\n            <td className='align-middle text-center'>\n              <select className='custom-select' name='role' id='role' defaultValue={value.role} onChange={ (event) => this.changeRoleHandler(event, value.email, this.props.token)}>\n                <option value='Team'>Team</option>\n                <option value='Admin'>Admin</option>\n              </select>\n            </td>\n            <td className='align-middle text-center'>\n              <IsActive isActive={value.active} onClick={(event, number) => this.sendMailHandler(event, value.email)}/>\n            </td>\n            <td className='align-middle text-center'>\n              <SettingModal \n                name={`${value.firstName} ${value.lastName}`} \n                value={this.state.removeValue} \n                onChange={this.onChangeHandler} \n                removeAlert={this.state.removeAlert} \n                onClick={(event)  => this.removeUserHandler(event, value.email, this.props.token)}\n                closeModal={this.closeModalHandler}></SettingModal>\n            </td>\n          </tr>\n        }\n          employees.push(employee)\n      })\n    }\n\n    let page = \n    <Aux>\n      { alertMailSent}\n      <table className='table table-responsive table-striped table-borderless'>\n        <thead>\n          <tr>\n            <th className='text-center' scope='col'>Name</th>\n            <th className='text-center' scope='col'>Role</th>\n            <th className='text-center' scope='col'>Active</th>\n            <th className='text-center' scope='col'>Delete</th>\n          </tr>\n        </thead>\n        <tbody>\n          {employees}\n        </tbody>\n      </table>\n      <button onClick={this.redirectCreateUserHandler} className='btn btn-primary'> Add user </button>\n    </Aux>\n\n    if (this.state.loading) {\n      page = <Spinner></Spinner>;\n    }\n    \n    if (this.props.role === \"Team\") {\n      page = <ForbiddenAccess></ForbiddenAccess>\n    }\n  \n    return (\n      <div className='container'> \n        <div className='row justify-content-center'> \n          <div className='col-12 col-md-auto mx-auto'>\n            <h2> Users settings </h2>\n            {page}\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nconst mapStatetoProps = state => {\n  return {\n    token: state.auth.token,\n    userID: state.auth.userID,\n    role: state.auth.role,\n  }\n};\n\nexport default connect(mapStatetoProps)(UserSettings);","import React from 'react';\n\nconst notFound = () => {\nreturn (\n  <div>\n    <h1 className='text-center'>Error 404</h1>\n    <h2 className='text-center'>This page does not exist</h2>\n  </div>\n)\n\n}\n\nexport default notFound;","import React, { Component } from 'react';\nimport { Route, withRouter, Switch, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nimport Aux from '../../hoc/aux';\nimport Navbar from '../../containers/Navbar/navbar'\nimport SalaryCalculator from '../Simulator/Form/Form';\nimport CreateUser from '../Authentication/CreateUser/CreateUser';\nimport Login from '../Authentication/Login/Login';\nimport Logout from '../Authentication/Logout/Logout';\nimport MailActivation from '../Authentication/MailActivation/MailActivation';\nimport EmployeesInformation from '../EmployeesInformation/EmployeesInformation';\nimport UserSettings from '../Settings/Users/users'\nimport NotFound from '../../UI/404/404';\nimport * as action from '../../store/actions/index';\n\nclass Layout extends Component {\n\n  state = {\n    isAuthenticated: null,\n  }\n\n  async componentDidMount () {\n    try {\n      await this.props.onTryAutoSignup();\n      if (this.props.isAuthenticated) {\n        this.setState({ ...this.state, isAuthenticated: true });\n      } else {\n        this.setState({ ...this.state, isAuthenticated: false });\n      }\n    } catch(error) {\n      this.setState({ ...this.state, isAuthenticated: false });\n    }\n  };\n\n  componentDidUpdate (prevProps, prevState) {\n    if (this.props.isAuthenticated !== prevState.isAuthenticated) {\n      this.setState({ ...this.state, isAuthenticated: this.props.isAuthenticated });\n    }\n  }\n\n  render () {\n    let links = null;\n    if (this.state.isAuthenticated === false) {\n      links = \n      <Switch>\n        <Route path=\"/user/confirmation/:token\" component={MailActivation} />\n        <Route path=\"/log-in\" component={Login}/>\n        <Redirect to=\"/log-in\" />\n      </Switch>\n    } else if\n    (this.state.isAuthenticated === null) {\n      links = null\n    } else if (this.state.isAuthenticated === true) {\n      links = \n      <Switch>\n        <Route path=\"/\" exact component={Login}/>\n        <Route path=\"/settings/users\" exact component={UserSettings}/>\n        <Route path=\"/salary-calculator\" exact component={SalaryCalculator}/>\n        <Route path=\"/create-user\" exact component={CreateUser}/>\n        <Route path=\"/log-in\" exact component={Login}/>\n        <Route path=\"/logout\" exact component={Logout}/>\n        <Route path=\"/user/confirmation/:token\" component={MailActivation}/>\n        <Route path=\"/users-information\" component={EmployeesInformation}/>\n        <Route component={NotFound}/>\n          </Switch>\n    }\n\n    return (\n      <Aux>\n          <Navbar isAuthenticated={this.props.isAuthenticated} role={this.props.role} />\n          { links }\n      </Aux>\n    )\n  }\n}\n\nconst mapStatetoProps = state => {\n  return {\n    isAuthenticated: state.auth.token !== null,\n    role: state.auth.role\n  }\n}\n\nconst mapDispatchtoProps = dispatch => {\n  return {\n    onTryAutoSignup: () => dispatch(action.loginCheckState()),\n  }\n}\n\nexport default withRouter(connect(mapStatetoProps, mapDispatchtoProps)(Layout));","export const updateObject = (oldObject, updatedProperties) => {\n  return {\n    ...oldObject,\n    ...updatedProperties,\n  }\n}","import * as actionType from '../actions/actionType';\nimport { updateObject } from '../utility';\n\nconst initialState = {\n  token: null,\n  userID: null,\n  role: null,\n  loading: false,\n  error: null,\n}\n\nconst loginStart = (state, action) => {\n  return updateObject(state, { error: null, loading: true });\n}\n\nconst loginSuccess = (state, action) => {\n  return updateObject(state, { token: action.token, userID: action.userID, error: null, loading: false, role: action.role });\n}\n\nconst loginFail = (state, action) => {\n  return updateObject(state, { error: action.error, loading: false });\n}\n\nconst logout = (state, action) => {\n  return updateObject(state, { userID: null, token: null, role: null })\n}\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionType.LOGIN_START: return loginStart(state, action);\n    case actionType.LOGIN_SUCCESS: return loginSuccess(state, action);\n    case actionType.LOGIN_FAIL: return loginFail(state, action);\n    case actionType.LOGOUT: return logout(state, action);\n    default:\n      return state\n  }\n};\n\nexport default reducer;","import React from 'react';\nimport { Provider } from 'react-redux';\nimport { createStore, combineReducers, applyMiddleware, compose } from 'redux';\nimport { BrowserRouter } from 'react-router-dom';\nimport thunk from 'redux-thunk';\n\nimport Layout from './components/Layout/Layout'\nimport authReducer from './store/reducers/authReducer';\n\nconst rootReducer = combineReducers({\n  auth: authReducer,\n})\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(rootReducer, composeEnhancers(applyMiddleware(thunk)));\n\n\nfunction App() {\n  return (\n    <Provider store = {store}>\n      <BrowserRouter basename='/'> \n        <Layout/>\n      </BrowserRouter>\n    </Provider>\n  )\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}